import os (usleep)

let H = 43
let W = 88

let directions = ([*-1...1] * [*-1...1]).remove([0, 0])

function next(grid, i, j) {
  if grid == nil {
    return ' '
  }

  let neighbors = [
    grid[i + y][x + j]
    for [y, x] in directions
    if (i + y in 0..H) && (j + x in 0..W)
  ].count('.')

  match (grid[i][j], neighbors) {
    ('.', n: n in 2...3) => '.',
    (' ', n: n == 3)     => '.',
    _                    => ' '
  }
}

function step(grid) {
  [[next(grid, j, i) for i in ..W] for j in ..H]
}

let grid = step()

let gun = [[0, 2], [0, 3], [1, 2], [1, 3], [8, 3], [8, 4],
               [9, 2], [9, 4], [10, 2], [10, 3], [16, 4], [16, 5],
               [16, 6], [17, 4], [18, 5], [22, 1], [22, 2], [23, 0],
               [23, 2], [24, 0], [24, 1], [24, 12], [24, 13],
               [25, 12], [25, 14], [26, 12], [34, 0], [34, 1],
               [35, 0], [35, 1], [35, 7], [35, 8], [35, 9], [36, 7], [37, 8]]

for [i, j] in gun {
  grid[j + 10][i + 10] = '.'
}

while grid = step(grid) {
  print(grid.map(&join(' ')).join('\n'))
  print('---')
  //usleep(1000 * 600)
}
