class Range {
        init(self, n) {
                self.n = n;
        }

        __next__(self, k) {
                if (k < self.n) return k;
                else return nil;
        }
}

class B {
        init(self) {
            print('B init');
        }

        __iter__(self) {
                print('B __iter__');
                return Range(3);
        }
}

for x in Range(5) {
        print("Iterating over a range: {x}");
}

for x in B() {
        print("Iterating over a B: {x}");
}


let b = blob();
b.push('Hello');

for byte in b {
        print("Iterating over a blob: {byte}");
}

for c in "Hello, world! µ∑Ωß∂" {
        print("Iterating over a string: {c}");
}

for a in ..4 {
        for b in ..3 {
                print("Nested iterators: {a}, {b}");
        }
}
