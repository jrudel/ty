import os
import fs (File)

let k = int(read()) || die('k must be an integer');

let files = os::listdir('datafiles');

let map = {}.default(_ -> files.map(|0|));
let similarity = {};

for file, f in files {
     print(file);
     print(f);
     let Ok(words) = fs::slurp("datafiles/{file}");
     words = words.split(/\s/);
     for (let i = 0; i <= words.len() - k; ++i) {
          let phrase = words.slice(i, k).intersperse(' ').sum();
          map[phrase][f] = map[phrase][f] + 1;
     }
}

for phrase in map {
     let counts = map[phrase];
     for f1 in ..files.len() {
          for f2 in f1 + 1 .. files.len() {
               similarity[[f1, f2]] = (similarity[[f1, f2]] || 0) + min(counts[f1], counts[f2]);
          }
     }
}

print("\t\t" + files.join("\t\t"));

(..files.len()).each(function (f1) {
     print(files[f1] + " " + (..files.len()).map(f2 -> "\t\t" + match similarity[[f1, f2]] {
          $n  => str(n),
          nil => '-'
     }).sum());
});
