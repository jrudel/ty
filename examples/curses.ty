import ffi as c

if not let $curses = c.dlopen('libncurses.so.6') {
	die('Failed to load curses')
}

function wrap(name, rType, *aTypes) {
	let fp = c.dlsym(name, curses)
	let interface = c.cif(rType, *aTypes)
	let argStorage = [c.new(t) for t in aTypes]
	return function (*args) {
		for arg, i in args {
			c.store(aTypes[i], argStorage[i], arg)
		}
		c.call(interface, fp, *argStorage)
	}
}

let initscr = wrap('initscr', c.ptr)
let mvaddnstr = wrap('mvaddnstr', c.int, c.int, c.int, c.ptr, c.int)
let curs_set = wrap('curs_set', c.int, c.int)
let refresh = wrap('refresh', c.int)
let endwin = wrap('endwin', c.int)
let getmaxx = wrap('getmaxx', c.int, c.ptr)
let getmaxy = wrap('getmaxy', c.int, c.ptr)
let getch = wrap('getch', c.int)

function mvaddstr(y, x, s) {
	mvaddnstr(y, x, s, s.size())
}

function getmaxyx(s) {
	let x = getmaxx(s)
	let y = getmaxy(s)
	return (y, x)
}

let screen = initscr()
let (h, w) = getmaxyx(screen)

curs_set(0)
mvaddstr(h/3, w/3, 'Hello, world!')

refresh()

getch()
endwin()
