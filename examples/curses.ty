import ffi as c
import cutil

if not let $curses = c.dlopen('libncurses.so.6') {
	die('Failed to load curses')
}

function wrap(*args) {
	cutil.wrap(curses, *args)
}

let initscr = wrap('initscr', c.ptr)
let mvaddnstr = wrap('mvaddnstr', c.int, c.int, c.int, c.ptr, c.int)
let curs_set = wrap('curs_set', c.int, c.int)
let refresh = wrap('refresh', c.int)
let endwin = wrap('endwin', c.int)
let getmaxx = wrap('getmaxx', c.int, c.ptr)
let getmaxy = wrap('getmaxy', c.int, c.ptr)
let getch = wrap('getch', c.int)
let start_color = wrap('start_color', c.void)
let init_pair = wrap('init_pair', c.int, c.short, c.short, c.short)
let init_color = wrap('init_color', c.int, c.short, c.short, c.short, c.short)
let has_colors = wrap('has_colors', c.int)
let color_content = wrap('color_content', c.int, c.short, c.ptr, c.ptr, c.ptr)
let color_set = wrap('color_set', c.int, c.short, c.ptr)
let pair_content = wrap('pair_content', c.int, c.short, c.ptr, c.ptr)

function mvaddstr(y, x, s) {
	mvaddnstr(y, x, s, s.size())
}

function getmaxyx(s) {
	let x = getmaxx(s)
	let y = getmaxy(s)
	return (y, x)
}

let screen = initscr()
let (h, w) = getmaxyx(screen)

let r = c.new(c.short)
let g = c.new(c.short)
let b = c.new(c.short)

start_color()

color_content(1, r, g, b)

init_color(4, 850, 0, 700)
init_color(5, 0, 0, 0)

init_pair(3, 4, 5)

color_set(3, nil)

curs_set(0)
mvaddstr(h/3, w/3, 'Hello, world!')
mvaddstr(h/3+2, w/3, str(has_colors()))
mvaddstr(h/3+4, w/3, "({c.load(c.short, r)}, {c.load(c.short, g)}, {c.load(c.short, b)})")

refresh()

getch()
endwin()
