#define BUILTIN(f)    { .type = VALUE_BUILTIN_FUNCTION, .builtin_function = (f), .tags = 0 }
#define INT(k)        { .type = VALUE_INTEGER,          .integer          = (k), .tags = 0 }

{ .module = NULL,     .name = "print",             .value = BUILTIN(builtin_print)                         },
{ .module = NULL,     .name = "die",               .value = BUILTIN(builtin_die)                           },
{ .module = NULL,     .name = "read",              .value = BUILTIN(builtin_read)                          },
{ .module = NULL,     .name = "rand",              .value = BUILTIN(builtin_rand)                          },
{ .module = NULL,     .name = "int",               .value = BUILTIN(builtin_int)                           },
{ .module = NULL,     .name = "float",             .value = BUILTIN(builtin_float)                         },
{ .module = NULL,     .name = "str",               .value = BUILTIN(builtin_str)                           },
{ .module = NULL,     .name = "bool",              .value = BUILTIN(builtin_bool)                          },
{ .module = NULL,     .name = "regex",             .value = BUILTIN(builtin_regex)                         },
{ .module = NULL,     .name = "blob",              .value = BUILTIN(builtin_blob)                          },
{ .module = NULL,     .name = "min",               .value = BUILTIN(builtin_min)                           },
{ .module = NULL,     .name = "max",               .value = BUILTIN(builtin_max)                           },
{ .module = NULL,     .name = "getenv",            .value = BUILTIN(builtin_getenv)                        },
{ .module = NULL,     .name = "setenv",            .value = BUILTIN(builtin_setenv)                        },
{ .module = "math",   .name = "log2",              .value = BUILTIN(builtin_log2)                          },
{ .module = "math",   .name = "log",               .value = BUILTIN(builtin_log)                           },
{ .module = "math",   .name = "exp",               .value = BUILTIN(builtin_exp)                           },
{ .module = "math",   .name = "pow",               .value = BUILTIN(builtin_pow)                           },
{ .module = "math",   .name = "sqrt",              .value = BUILTIN(builtin_sqrt)                          },
{ .module = "math",   .name = "cbrt",              .value = BUILTIN(builtin_cbrt)                          },
{ .module = "bit",    .name = "and",               .value = BUILTIN(builtin_bit_and)                       },
{ .module = "bit",    .name = "or",                .value = BUILTIN(builtin_bit_or)                        },
{ .module = "bit",    .name = "xor",               .value = BUILTIN(builtin_bit_xor)                       },
{ .module = "bit",    .name = "complement",        .value = BUILTIN(builtin_bit_complement)                },
{ .module = "bit",    .name = "shiftLeft",         .value = BUILTIN(builtin_bit_shift_left)                },
{ .module = "bit",    .name = "shiftRight",        .value = BUILTIN(builtin_bit_shift_right)               },
{ .module = "os",     .name = "open",              .value = BUILTIN(builtin_os_open)                       },
{ .module = "os",     .name = "close",             .value = BUILTIN(builtin_os_close)                      },
{ .module = "os",     .name = "read",              .value = BUILTIN(builtin_os_read)                       },
{ .module = "os",     .name = "write",             .value = BUILTIN(builtin_os_write)                      },
{ .module = "os",     .name = "listdir",           .value = BUILTIN(builtin_os_listdir)                    },
{ .module = "os",     .name = "fcntl",             .value = BUILTIN(builtin_os_fcntl)                      },
{ .module = "os",     .name = "spawn",             .value = BUILTIN(builtin_os_spawn)                      },
{ .module = "os",     .name = "connect",           .value = BUILTIN(builtin_os_connect)                    },
{ .module = "os",     .name = "usleep",            .value = BUILTIN(builtin_os_usleep)                     },
{ .module = "os",     .name = "O_RDWR",            .value = INT(O_RDWR)                                    },
{ .module = "os",     .name = "O_CREAT",           .value = INT(O_CREAT)                                   },
{ .module = "os",     .name = "O_RDONLY",          .value = INT(O_RDONLY)                                  },
{ .module = "os",     .name = "O_WRONLY",          .value = INT(O_WRONLY)                                  },
{ .module = "os",     .name = "O_TRUNC",           .value = INT(O_TRUNC)                                   },
{ .module = "os",     .name = "O_APPEND",          .value = INT(O_APPEND)                                  },
{ .module = "os",     .name = "O_NONBLOCK",        .value = INT(O_NONBLOCK)                                },
{ .module = "os",     .name = "F_SETFD",           .value = INT(F_SETFD)                                   },
{ .module = "os",     .name = "F_GETFD",           .value = INT(F_GETFD)                                   },
{ .module = "os",     .name = "F_GETFL",           .value = INT(F_GETFL)                                   },
{ .module = "os",     .name = "F_SETFL",           .value = INT(F_SETFL)                                   },
{ .module = "os",     .name = "F_DUPFD",           .value = INT(F_DUPFD)                                   },
#ifdef __APPLE__
{ .module = "os",     .name = "F_DUPFD_CLOEXEC",   .value = INT(F_DUPFD_CLOEXEC)                           },
{ .module = "os",     .name = "F_GETOWN",          .value = INT(F_GETOWN)                                  },
{ .module = "os",     .name = "F_SETOWN",          .value = INT(F_SETOWN)                                  },
{ .module = "os",     .name = "F_GETPATH",         .value = INT(F_GETPATH)                                 },
{ .module = "os",     .name = "F_PREALLOCATE",     .value = INT(F_PREALLOCATE)                             },
{ .module = "os",     .name = "F_SETSIZE",         .value = INT(F_SETSIZE)                                 },
{ .module = "os",     .name = "F_RDADVISE",        .value = INT(F_RDADVISE)                                },
{ .module = "os",     .name = "F_RDAHEAD",         .value = INT(F_RDAHEAD)                                 },
{ .module = "os",     .name = "F_NOCACHE",         .value = INT(F_NOCACHE)                                 },
{ .module = "os",     .name = "F_LOG2PHYS",        .value = INT(F_LOG2PHYS)                                },
{ .module = "os",     .name = "F_LOG2PHYS_EXT",    .value = INT(F_LOG2PHYS_EXT)                            },
{ .module = "os",     .name = "F_FULLFSYNC",       .value = INT(F_FULLFSYNC)                               },
{ .module = "os",     .name = "F_SETNOSIGPIPE",    .value = INT(F_SETNOSIGPIPE)                            },
{ .module = "os",     .name = "F_GETNOSIGPIPE",    .value = INT(F_GETNOSIGPIPE)                            },
#endif
{ .module = "errno",  .name = "get",               .value = BUILTIN(builtin_errno_get)                     },
{ .module = "errno",  .name = "str",               .value = BUILTIN(builtin_errno_str)                     },
{ .module = "errno",  .name = "ENOENT",            .value = INT(ENOENT)                                    },
{ .module = "errno",  .name = "ENOMEM",            .value = INT(ENOMEM)                                    },
{ .module = "errno",  .name = "EINVAL",            .value = INT(EINVAL)                                    },
{ .module = "errno",  .name = "EACCES",            .value = INT(EACCES)                                    },
{ .module = "errno",  .name = "EINTR",             .value = INT(EINTR)                                     },
{ .module = "errno",  .name = "EAGAIN",            .value = INT(EAGAIN)                                    },
{ .module = "errno",  .name = "ENOTDIR",           .value = INT(ENOTDIR)                                   },
{ .module = "errno",  .name = "ENOSPC",            .value = INT(ENOSPC)                                    },
{ .module = "json",   .name = "parse",             .value = BUILTIN(builtin_json_parse)                    },

#undef INT
#undef BUILTIN
